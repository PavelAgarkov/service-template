services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: "habrdb"
      POSTGRES_USER: "habrpguser"
      POSTGRES_PASSWORD: "pgpwd4habr"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgres-config/scripts/:/docker-entrypoint-initdb.d
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres-config/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - habrdb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - service-template
    command: >
      postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U habrpguser -d habrdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # Порт для подключения клиентов
      - "15672:15672"     # Порт для доступа к Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user # Логин для доступа к Management UI
      RABBITMQ_DEFAULT_PASS: password # Пароль для доступа к Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - service-template

#RabbitMQ Management UI: http://localhost:15672 (логин: user, пароль: password).
#Grafana: http://localhost:3000 (логин: admin, пароль: admin).

  rabbitmq-monitor:
    image: grafana/grafana:latest
    container_name: rabbitmq_monitor
    ports:
      - "3111:3000"  # Порт для доступа к Grafana
    depends_on:
      - rabbitmq
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - service-template

volumes:
  rabbitmq_data:
  grafana_data:
  habrdb-data:

networks:
  service-template:
    driver: bridge